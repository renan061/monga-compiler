/* OK test */

/* definition_var */

	/* list_names */
	int var;
	int var, var, var, var;

	/* type */
	int var;
	float var;
	char var;
	int[] var;
	float[][] var;
	char[][][][][] var;

/* definition_func */

	/* func_param_list */
	void foo() {}
	int foo(int a) {}
	int[] foo(int a) {}

	/* param_list */
	float foo(float a, int b) {}
	char foo(char a, float b, int c) {}

/* block */

	/* block_definition_var_list */
	void bar() {}
	void bar() { int var; }
	void bar() { char var; float var; int var; }

	/* block_command_list */
	void bar() { int var; }
	void bar() { char var; float var; int var; }

/* command */

	void foo() {
		/* while */
		while (1) {}

		/* var = exp */
		var = 1;

		/* if / if else / if else if / if else if else */
		if (1) {}
		if (1) {} else {}
		if (1) {} else if (1) {}
		if (1) {} else if (1) {} else {}

		/* if else while ambiguities */
		if (1)
			while (1)
				if (1)
					while (1)
						if (1)
							var = 1;
						else
							var = 1;
				else if (1)
					while (1)
						var = 1;

		else if (1)
			var = 1;
		else
			var = 1;

		/* return */
		return ;
		return 1;

		/* func_call */
		bar();
		bar(1);
		bar(1, 2, 3);
	}

/* exp */

	void foo() {
		var = 1;
		var = 1.0;
		var = "string";
		var = var;
		var = (1);
		var = foo(a, b, c);
		var = new int[1];
		var = -1;
		var = a + b;
		var = a - b;
		var = a * b;
		var = a / b;
		var = a == b;
		var = a <= b;
		var = a >= b;
		var = a < b;
		var = a > b;
		var = !a;
		var = a && b;
		var = a || b;
	}

/* wild */

void main () {
	if (1 == 2 + 3)
		var = 3;
	else if (1) {

	}

	var = (-b) + 1;	
	var = -1<2;

	a = -2 - 3;
	b = -x || -y * -z;
	c = x || y + 3;

	return;
}

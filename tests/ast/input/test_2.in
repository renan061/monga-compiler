float foo(char c, int a, float b) {
    return b;
}
char[] bar() {
	return "str";
}
void baz() {
    return;
}
/* Ok type checking */
float main() {
	char c;
	int i;
	float f;
	char[] str;
	int[] intarray1;
	int[] intarray2;
	float[][][] floatarray1;
	float[][][] floatarray2;

	/* Var */
		/* VarId */
		c = 65;
		i = 1;
		f = 1.0;
		/* VarIndexed */
		intarray1[c] = 1;
		intarray1[0] = 1;

	/* Cmd */
		/* CmdIf */
		if (c) {}
		if (i) {}
		/* CmdIfElse */
		if (c) {} else {}
		if (i) {} else {}
		/* CmdWhile */
		while (c) {}
		while (i) {}
		/* CmdAsg */
		c = 65;
		c = i;
		i = c;
		i = 1;
		f = c;
		f = i;
		f = 1.0;
		str = new char[10];
		intarray1 = intarray1;
		intarray1[0] = intarray1[0];
		floatarray1 = floatarray2;
		floatarray1[0] = floatarray2[0];
		/* CmdReturn */
		return c;
		return i;
		return f;
		/* CmdCall */
		main();
		foo(c, c, c);

	/* Exp */
		/* ExpKStr */
		c = 65;
		str = "str";
		/* ExpNew */
		intarray1 = new int[1];
		/* ExpUnary */
		i = -c;
		i = !1;
		i = !c;
		/* ExpBinary */
			/* == */
			i = intarray1 == intarray2;
			i = floatarray1 == floatarray2;
			i = c == c;
			i = c == 1;
			i = c == 1.0;
			i = 1 == 1.0;
			i = 1.0 == 2.0;
			/* && and || */
			i = 1.0 && 2;
			i = c || 0.0;
			/* Mul, Div, Add, Sub */
			i = c + c;
			i = c - 1;
			i = 1 * 2;
			f = c / c;
			f = c + 1;
			f = c - 1.0;
			f = 1 * 2;
			f = 1 / 2.0;
			f = 1.0 + 2.0;
			/* <=, >=, <, > */
			i = c <= 1;
			i = c >= 1.0;
			i = 1 < 2;
			i = 1 > 2.0;
}

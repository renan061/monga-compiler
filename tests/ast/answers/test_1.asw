int intvalue;
float floatvalue;
char charvalue;
int func0() {
    return (1);
}
int func1(int a) {
    return (1);
}
int func2(int a, int b) {
    return (1);
}
int func3(int a, float b, char c) {
    return (1);
}
void foo(char a, int b, float c) {
}
int fooreturn(char a, int b, float c) {
    return (1);
}
void bar(int intvalue1, int intvalue2) {
    int i;
    float f;
    char c;
    int[] x;
    int[][] y;
    int[][][] z;
    int a1;
    int b1;
    float a2;
    float b2;
    float c2;
    char a3;
    char b3;
    char c3;
    char d3;
    char e3;
}
void baz(int intvalue1) {
    intvalue1:int = (1);
    intvalue1:int = (2);
    intvalue1:int = (3);
    return ;
}
int main(char[] x, int[][] y, float[][][] z) {
    int[] indexed1;
    int[][][] indexed3;
    int a;
    float b;
    char c;
    (if(((1)||(2))) {
        a:int = (3);
    })
    (if(((1)||(2))) {
        a:int = (3);
    } else {
        a:int = (4);
    })
    (while(((1)||(2))) {
    })
    (while(((1)||(2))) {
        a:int = (1);
        b:float = (2);
        c:char = (3);
    })
    (indexed1:int[])[(1)]:int = ((2)||(3));
    return ((1)||(2));
    func0();
    func1((1));
    func3((1), (2), (3));
    (if((1)) {
      (if((2)) {
        a:int = (3);
      } else {
        a:int = (4);
      })
    } else {
      (if((5)) {
        (if((6)) {
          a:int = (7);
        } else {
          (while((8)) {
            (if((9)) {
              a:int = (10);
            } else {
              (if((11)) {
                a:int = (12);
              } else {
                a:int = (13);
              })
            })
          })
        })
      })
    })
    a:int = (b:float);
    a:int = ((indexed1:int[])[(1)]:int);
    a:int = ((((indexed3:int[][][])[(1)]:int[][])[(2)]:int[])[(3)]:int);
    a:int = ((((indexed3:int[][][])[((0)>=(5))]:int[][])[(fooreturn((1), (func1(((0)&&(1)))), (3.000000)))]:int[])[((1)+((indexed1:int[])[(3)]:int))]:int);
    a:int = (1);
    a:int = (1.100000);
    a:int = ("111");
    a:int = (b:float);
    a:int = (func0());
    a:int = (func1((1)));
    a:int = (func2((1), (2)));
    a:int = (func3((1), (2), (3)));
    indexed1:int[] = (new int[(2)]);
    a:int = (-(1));
    a:int = (!(1));
    a:int = ((1)*(2));
    a:int = ((1)/(2));
    a:int = ((1)+(2));
    a:int = ((1)-(2));
    a:int = ((1)==(2));
    a:int = ((1)<=(2));
    a:int = ((1)>=(2));
    a:int = ((1)<(2));
    a:int = ((1)>(2));
    a:int = ((1)&&(2));
    a:int = ((1)||(2));
    a:int = ((-(1))||(((2)*(3))>=((4)+((5)/(6)))));
    a:int = ((((0)&&(1))+(((fooreturn((2), (func1(((1)+((3)/(7))))), (3)))/(a:int))*(3)))+(new int[(7)]));
}
